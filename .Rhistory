biomarker_raw = read.csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv')
biomarker_raw
biomarker_raw %>% head(4)
library(tidyverse)
library(dplyr)
library(tidyverse)
biomarker_raw = read.csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv')
biomarker_raw %>% head(4)
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
var_names
# read in data
biomarker_clean <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# log transform, center and scale, and trim
mutate(across(.cols = -c(group, ados),
~ trim(scale(log10(.x))[, 1], .at = 3))) %>%
# reorder columns
select(group, ados, everything())
library(tidyverse)
# get names
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
# function for trimming outliers (good idea??)
trim <- function(x, .at){
x[abs(x) > .at] <- sign(x[abs(x) > .at])*.at
return(x)
}
# read in data
biomarker_clean <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# log transform, center and scale, and trim
mutate(across(.cols = -c(group, ados),
~ trim(scale(log10(.x))[, 1], .at = 3))) %>%
# reorder columns
select(group, ados, everything())
# export as r binary
save(list = 'biomarker_clean',
file = 'data/biomarker-clean.RData')
biomarker_raw = read.csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv')
# get names
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
# function for trimming outliers (good idea??)
trim <- function(x, .at){
x[abs(x) > .at] <- sign(x[abs(x) > .at])*.at
return(x)
}
# read in data
biomarker_clean <- read_csv('data/biomarker-raw.csv',
skip = 2,
col_select = -2L,
col_names = c('group',
'empty',
pull(var_names, abbreviation),
'ados'),
na = c('-', '')) %>%
filter(!is.na(group)) %>%
# log transform, center and scale, and trim
mutate(across(.cols = -c(group, ados),
~ trim(scale(log10(.x))[, 1], .at = 3))) %>%
# reorder columns
select(group, ados, everything())
# export as r binary
save(list = 'biomarker_clean',
file = 'data/biomarker-clean.RData')
biomarker_clean
proteins_sstar <- intersect(proteins_s1, proteins_s2)
proteins_s1 <- ttests_out %>%
slice_min(p.adj, n = 10) %>%
pull(protein)
library(tidyverse)
library(infer)
library(randomForest)
library(tidymodels)
library(modelr)
library(yardstick)
load('data/biomarker-clean.RData')
# function to compute tests
test_fn <- function(.df){
t_test(.df,
formula = level ~ group,
order = c('ASD', 'TD'),
alternative = 'two-sided',
var.equal = F)
}
ttests_out <- biomarker_clean %>%
# drop ADOS score
select(-ados) %>%
# arrange in long format
pivot_longer(-group,
names_to = 'protein',
values_to = 'level') %>%
# nest by protein
nest(data = c(level, group)) %>%
# compute t tests
mutate(ttest = map(data, test_fn)) %>%
unnest(ttest) %>%
# sort by p-value
arrange(p_value) %>%
# multiple testing correction
mutate(m = n(),
hm = log(m) + 1/(2*m) - digamma(1),
rank = row_number(),
p.adj = m*hm*p_value/rank)
# select significant proteins
proteins_s1 <- ttests_out %>%
slice_min(p.adj, n = 10) %>%
pull(protein)
# store predictors and response separately
predictors <- biomarker_clean %>%
select(-c(group, ados))
response <- biomarker_clean %>% pull(group) %>% factor()
# fit RF
set.seed(101422)
rf_out <- randomForest(x = predictors,
y = response,
ntree = 1000,
importance = T)
library(tidyverse)
library(infer)
library(randomForest)
library(tidymodels)
library(modelr)
library(yardstick)
load('data/biomarker-clean.RData')
# function to compute tests
test_fn <- function(.df){
t_test(.df,
formula = level ~ group,
order = c('ASD', 'TD'),
alternative = 'two-sided',
var.equal = F)
}
ttests_out <- biomarker_clean %>%
# drop ADOS score
select(-ados) %>%
# arrange in long format
pivot_longer(-group,
names_to = 'protein',
values_to = 'level') %>%
# nest by protein
nest(data = c(level, group)) %>%
# compute t tests
mutate(ttest = map(data, test_fn)) %>%
unnest(ttest) %>%
# sort by p-value
arrange(p_value) %>%
# multiple testing correction
mutate(m = n(),
hm = log(m) + 1/(2*m) - digamma(1),
rank = row_number(),
p.adj = m*hm*p_value/rank)
# select significant proteins
proteins_s1 <- ttests_out %>%
slice_min(p.adj, n = 10) %>%
pull(protein)
# store predictors and response separately
predictors <- biomarker_clean %>%
select(-c(group, ados))
response <- biomarker_clean %>% pull(group) %>% factor()
# fit RF
set.seed(101422)
rf_out <- randomForest(x = predictors,
y = response,
ntree = 1000,
importance = T)
# check errors
rf_out$confusion
# compute importance scores
proteins_s2 <- rf_out$importance %>%
as_tibble() %>%
mutate(protein = rownames(rf_out$importance)) %>%
slice_max(MeanDecreaseGini, n = 10) %>%
pull(protein)
# select subset of interest
proteins_sstar <- intersect(proteins_s1, proteins_s2)
biomarker_sstar <- biomarker_clean %>%
select(group, any_of(proteins_sstar)) %>%
mutate(class = (group == 'ASD')) %>%
select(-group)
# partition into training and test set
set.seed(101422)
biomarker_split <- biomarker_sstar %>%
initial_split(prop = 0.8)
# fit logistic regression model to training set
fit <- glm(class ~ .,
data = training(biomarker_split),
family = 'binomial')
# evaluate errors on test set
class_metrics <- metric_set(sensitivity,
specificity,
accuracy,
roc_auc)
testing(biomarker_split) %>%
add_predictions(fit, type = 'response') %>%
mutate(est = as.factor(pred > 0.5), tr_c = as.factor(class)) %>%
class_metrics(estimate = est,
truth = tr_c, pred,
event_level = 'second')
biomarker_raw <- read.csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv') %>%
# subset to proteins of interest and group
select(group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
library(tidyverse)
library(dplyr)
biomarker_raw = read.csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv')
s_star <- c("DERM", "RELT", "IgD", "PTN", "FSTL1")
biomarker_raw <- read.csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv') %>%
# subset to proteins of interest and group
select(group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
library(tidyverse)
library(tidymodels)
library(modelr)
library(rsample)
library(yardstick)
biomarker_raw = read.csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv')
s_star <- c("DERM", "RELT", "IgD", "PTN", "FSTL1")
biomarker_raw <- read.csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv') %>%
# subset to proteins of interest and group
select(group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
biomarker_raw <- read_csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv') %>%
# subset to proteins of interest and group
select(group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
s_star <- c("DERM", "RELT", "IgD", "PTN", "FSTL1")
biomarker_raw <- read_csv('/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv') %>%
# subset to proteins of interest and group
select(Group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab4-logistic/data/biomarker_clean.csv'
biomarker_raw <- read_csv(url) %>%
# subset to proteins of interest and group
select(Group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
library(tidyverse)
library(tidymodels)
library(modelr)
library(rsample)
library(yardstick)
url <- 'https://raw.githubusercontent.com/pstat197/pstat197a/main/materials/labs/lab4-logistic/data/biomarker_clean.csv'
s_star <- c("DERM", "RELT", "IgD", "PTN", "FSTL1")
biomarker_raw <- read_csv(url) %>%
# subset to proteins of interest and group
select(Group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
s_star <- c("DERM", "RELT", "IgD", "PTN", "FSTL1")
biomarker_raw <- read_csv(url) %>%
# subset to proteins of interest and group
select(group, any_of(s_star)) %>%
# convert group (chr) to binary (lgl)
mutate(class = (group == 'ASD')) %>%
select(-group)
biomarker
biomarker_raw
var_names <- read_csv('data/biomarker-raw.csv',
col_names = F,
n_max = 2,
col_select = -(1:2)) %>%
t() %>%
as_tibble() %>%
rename(name = V1,
abbreviation = V2) %>%
na.omit()
biomarker_visual = read.csv("/Users/seanreagan/Documents/GitHub/module1-group-14/data/biomarker-raw.csv")
biomarker_visual %>% head(4)
